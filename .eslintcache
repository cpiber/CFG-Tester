[{"/mnt/Daten/Consti/CFG-Tester/src/index.js":"1","/mnt/Daten/Consti/CFG-Tester/src/App/App.tsx":"2","/mnt/Daten/Consti/CFG-Tester/src/serviceWorker.js":"3","/mnt/Daten/Consti/CFG-Tester/src/App/Body/Body.tsx":"4","/mnt/Daten/Consti/CFG-Tester/src/App/Header/Header.tsx":"5","/mnt/Daten/Consti/CFG-Tester/src/App/Footer/Footer.tsx":"6","/mnt/Daten/Consti/CFG-Tester/src/App/Logic/querys.ts":"7","/mnt/Daten/Consti/CFG-Tester/src/App/Body/RulesInput.tsx":"8","/mnt/Daten/Consti/CFG-Tester/src/App/Body/TextInput.tsx":"9","/mnt/Daten/Consti/CFG-Tester/src/App/Body/GrammarOutput.tsx":"10","/mnt/Daten/Consti/CFG-Tester/src/App/Logic/grammar.ts":"11","/mnt/Daten/Consti/CFG-Tester/src/App/Body/Textarea.tsx":"12"},{"size":460,"mtime":1601818683156,"results":"13","hashOfConfig":"14"},{"size":458,"mtime":1601818683149,"results":"15","hashOfConfig":"14"},{"size":5003,"mtime":1601818683157,"results":"16","hashOfConfig":"14"},{"size":664,"mtime":1601818683150,"results":"17","hashOfConfig":"14"},{"size":337,"mtime":1601818683153,"results":"18","hashOfConfig":"14"},{"size":761,"mtime":1601818683153,"results":"19","hashOfConfig":"14"},{"size":1413,"mtime":1601818683155,"results":"20","hashOfConfig":"14"},{"size":2024,"mtime":1601818683151,"results":"21","hashOfConfig":"14"},{"size":1316,"mtime":1601818683151,"results":"22","hashOfConfig":"14"},{"size":4775,"mtime":1601818683151,"results":"23","hashOfConfig":"14"},{"size":4981,"mtime":1601818683154,"results":"24","hashOfConfig":"14"},{"size":1080,"mtime":1601818683152,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"fdz609",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/Daten/Consti/CFG-Tester/src/index.js",[],["53","54"],"/mnt/Daten/Consti/CFG-Tester/src/App/App.tsx",[],["55","56"],"/mnt/Daten/Consti/CFG-Tester/src/serviceWorker.js",[],"/mnt/Daten/Consti/CFG-Tester/src/App/Body/Body.tsx",[],"/mnt/Daten/Consti/CFG-Tester/src/App/Header/Header.tsx",[],"/mnt/Daten/Consti/CFG-Tester/src/App/Footer/Footer.tsx",[],"/mnt/Daten/Consti/CFG-Tester/src/App/Logic/querys.ts",[],"/mnt/Daten/Consti/CFG-Tester/src/App/Body/RulesInput.tsx",[],"/mnt/Daten/Consti/CFG-Tester/src/App/Body/TextInput.tsx",["57","58"],"import React, { useState } from 'react';\n\nimport styles from './bodyComponent.module.scss';\n\nimport Query from '../Logic/querys';\nimport Textarea from './Textarea';\n\n\ninterface Props {\n  className?: string;\n}\n\nfunction TextInput(props: Props) {\n  let query = Query.useContainer();\n  let [status, statusSet] = useState(\"Matching is not implemented yet\");\n  let [buttonDisabled, buttonDisable] = useState(false);\n\n  const inputChange = (e: React.ChangeEvent) =>\n    query.updateInput((e.target as HTMLInputElement).value);\n  \n  const clickMatch = (e: React.MouseEvent) => {\n    (e.target as HTMLElement).blur();\n  }\n\n  return (\n    <div\n      className={`${props.className?props.className:''} App-bodyComponent`}\n    >\n      <Textarea\n        className={styles.textarea}\n        value={query.input}\n        onChange={inputChange}\n        title=\"Test Input\"\n        aria=\"Input to match with grammar\"\n      >\n        <div className=\"row1\">\n          <span className=\"status\">\n            {status}\n          </span>\n        </div>\n        <div className=\"row2\">\n          <button\n            className=\"button secondary\"\n            onClick={clickMatch}\n            disabled={buttonDisabled}\n          >\n            Re-Match\n          </button>\n        </div>\n      </Textarea>\n    </div>\n  )\n}\nexport default TextInput;","/mnt/Daten/Consti/CFG-Tester/src/App/Body/GrammarOutput.tsx",[],"/mnt/Daten/Consti/CFG-Tester/src/App/Logic/grammar.ts",[],"/mnt/Daten/Consti/CFG-Tester/src/App/Body/Textarea.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":15,"column":16,"nodeType":"65","messageId":"66","endLine":15,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":16,"column":24,"nodeType":"65","messageId":"66","endLine":16,"endColumn":37},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'statusSet' is assigned a value but never used.","Identifier","unusedVar","'buttonDisable' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]