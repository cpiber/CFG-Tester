{"version":3,"sources":["App/Header/Syntax/code.module.scss","App/Header/Advanced.module.scss","App/Header/Header.module.scss","App/Logic/providers/querys.ts","App/Logic/set.ts","App/Logic/util.ts","App/values.ts","App/Header/settings.svg","App/Body/GrammarOutput.tsx","App/Logic/grammar/grammartypes.ts","App/Logic/grammar/grammar.ts","App/Logic/grammar/fcsgrammar.ts","App/Logic/grammar/bnfgrammar.ts","App/Logic/providers/syntaxes.ts","App/Body/Textarea.tsx","App/Body/RulesInput.tsx","App/Body/TextInput.tsx","App/Body/Body.tsx","App/Footer/data.ts","App/Footer/Footer.tsx","App/Header/Advanced.tsx","App/Radio.tsx","App/Header/Syntax/BNF.tsx","App/Header/Syntax/FCS.tsx","App/Header/Syntax/Switcher.tsx","App/Header/Modal.tsx","App/Header/Header.tsx","App/App.tsx","serviceWorker.js","index.js","App/Body/bodyComponent.module.scss","App/Body/Textarea.module.scss","App/Body/Body.module.scss","App/Header/Modal.module.scss","App/Body/GrammarOutput.module.scss"],"names":["module","exports","Query","createContainer","initialQuery","parseQ","query","parsed","parse","rules","input","useState","state","setState","undefined","grammar","setGrammar","setRules","useCallback","nr","setInput","ni","updateQuery","useEffect","update","window","location","hash","addEventListener","removeEventListener","timeout","useRef","current","setTimeout","stringify","clearTimeout","Symbol","iterator","toStringTag","ComparableSet","other","_map","clear","keys","values","this","Map","bind","size","value","set","delete","callbackfn","thisArg","forEach","v","_","__","call","has","t","f","clamp","val","min","max","Math","extendedClamp","r","def","isNaN","arguments","length","_g","EXP_DEPTH","EXP_NONTERM","EXP_ITER","SYN_KEY","readNum","name","args","localStorage","getItem","writeNum","setItem","maxDepth","operation","maxNonTerms","maxIter","genNum","readMaxDepth","writeMaxDepth","readMaxNonTerms","writeMaxNonTerms","readMaxIter","writeMaxIter","readGenNum","writeGenNum","validateSyntax","Inputs","strings","setStrings","setStatus","useContainer","buttonDisabled","setButtonDisabled","isClear","setClear","number","setNumber","grammarUpdated","Set","checkValid","err","className","onClick","e","target","tagName","blur","checkClick","i","hasWarn","startSize","str","next","Error","message","add","getStrings","disabled","type","onChange","trim","GrammarOutput","status","stringEls","useMemo","retArr","Array","setMap","ind","split","map","key","styles","empty","textarea","area","stylesBody","title","role","GSymbol","symbol","NonTerminal","Terminal","sym","strict","EmptySymbol","isEmpty","char","QueueElement","rule","before","depth","nonTerminals","ParseState","left","after","origin","cur","prev","reduce","Parse","handle","currentSymbol","currentInput","whitespace","data","control","Grammar","gen","currentState","findIndex","s","start","escape","line","column","literal","match","console","debug","endLine","ignoreWhitespace","toSpecial","splice","checkParseValid","construct","push","startsym","generator","g","iterSinceYield","queue","shift","expandTerminal","expandNonTerminal","applicable","nrule","top","topc","k","isFinished","completer","isNonTerminal","predictor","isTerminal","scanner","n","ns","equals","nextInRule","slice","l","nonTerminal","FCSGrammar","parseRules","parseLeft","extractTerminals","parseIndicator","parseBranches","nchar","checkBranch","mergeTerminals","initGenerator","BNFGrammar","parseLeftStart","checkHasUndeclaredTerminals","fixTerminals","parseTerminal","parseNonTerminal","Syntax","syntax","_setSyntax","setSyntax","syn","writeSyntax","createGrammar","createGrammarFromSyntax","Textarea","id","placeholder","aria","children","id_","uniqueString","htmlFor","draggable","placeholders","fcs","bnf","RulesInput","loadRules","join","TextInput","res","matches","Body","grid","Provider","initialState","rightTop","rightBottom","beginyear","process","author","source","Footer","year","Date","getFullYear","toString","Fragment","href","rel","Value","read","write","num","setNum","removeItem","Advanced","open","setOpen","c","wrapper","close","opener","content","warn","RadioContext","createContext","RadioGroup","rest","RadioButton","useContext","radioValue","checked","E","stylesCode","entry","N","nonterminal","T","terminal","BNF","box","code","FCS","SyntaxSwitcher","Modal","advancedOpen","setAdvancedOpen","stylesH","cols","_extends","Object","assign","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSettings","_ref","svgRef","titleId","props","xmlns","xmlnsXlink","x","y","viewBox","xmlSpace","ref","d","ForwardRef","Header","isOpen","settings","onRequestClose","onAfterOpen","ReactTooltip","rebuild","testId","App","effect","Boolean","hostname","ReactModal","setAppElement","defaultStyles","inset","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02f9301e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"code_box__3qFF4\",\"code\":\"code_code__12eUv\",\"entry\":\"code_entry__2iIXq\",\"nonterminal\":\"code_nonterminal__3SmZs\",\"terminal\":\"code_terminal__3sfUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Advanced_wrapper__2cqsU\",\"close\":\"Advanced_close__3VCxR\",\"opener\":\"Advanced_opener__2hHgO\",\"content\":\"Advanced_content__2A_ma\",\"open\":\"Advanced_open__1E4dn\",\"warn\":\"Advanced_warn__3M2fl\",\"value\":\"Advanced_value__2sa9B\",\"clear\":\"Advanced_clear__PiYzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cols\":\"Header_cols__vzgPA\",\"title\":\"Header_title__1hIMT\",\"settings\":\"Header_settings__1Lc0z\",\"close\":\"Header_close__3nXde\"};","import { stringify, parse } from 'query-string';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { createContainer } from 'unstated-next';\nimport type { Grammar } from './../grammar';\n\ndeclare global {\n  interface Window {\n    grammar: Grammar | undefined;\n  }\n}\n\nconst useQuery = (initialQuery = \"\") => {\n  const parseQ = (query: string) => {\n    const parsed = parse(query);\n    const nr = typeof(parsed.rules) === \"string\" ? parsed.rules : \"\";\n    const ni = typeof(parsed.input) === \"string\" ? parsed.input : \"\";\n    return { rules: nr, input: ni };\n  };\n\n  const [state, setState] = useState(parseQ(initialQuery));\n  const [grammar, setGrammar] = useState(undefined as Grammar | undefined);\n\n  const setRules = useCallback((nr: string) => setState({ ...state, rules: nr }), [state, setState]);\n  const setInput = useCallback((ni: string) => setState({ ...state, input: ni }), [state, setState]);\n  const updateQuery = useCallback((query: string) => setState(parseQ(query)), [setState]);\n\n  // detect hash changes, cleanup listener on unmount\n  useEffect(() => {\n    const update = () => updateQuery(window.location.hash);\n    window.addEventListener('hashchange', update);\n    return () => window.removeEventListener('hashchange', update);\n  }, [updateQuery]);\n  \n  // reflect changes in hash, debounce\n  const timeout = useRef(0);\n  useEffect(() => {\n    timeout.current = window.setTimeout(() => window.location.hash = stringify(state), 100);\n    return () => window.clearTimeout(timeout.current);\n  }, [state]);\n\n  useEffect(() => {\n    window.grammar = grammar;\n  }, [grammar]);\n\n  return { ...state, setRules, setInput, grammar, setGrammar, updateQuery };\n};\n\nconst Query = createContainer(useQuery);\nexport default Query;","export interface Comparable {\n  hash(): string;\n}\n\nclass ComparableSet<V extends Comparable> implements Set<V> {\n  private _map: Map<string, V>;\n  clear: () => void;\n  keys: () => IterableIterator<V>;\n  values: () => IterableIterator<V>;\n  [Symbol.iterator]: () => IterableIterator<V>;\n\n  constructor(other?: ComparableSet<V>) {\n    this._map = other ? new Map(other._map) : new Map();\n    this.clear = this._map.clear.bind(this._map);\n    this.keys = this._map.values.bind(this._map);\n    this.values = this._map.values.bind(this._map);\n    this[Symbol.iterator] = this.values;\n  }\n\n  get size() {\n    return this._map.size;\n  }\n  add(value: V): this {\n    this._map.set(value.hash(), value);\n    return this;\n  }\n  delete(value: V): boolean {\n    return this._map.delete(value.hash());\n  }\n  forEach(callbackfn: (value: V, value2: V, set: Set<V>) => void, thisArg?: any): void {\n    this._map.forEach((v, _, __) => callbackfn.call(thisArg, v, v, this), thisArg);\n  }\n  has(value: V): boolean {\n    return this._map.has(value.hash());\n  }\n  entries(): IterableIterator<[V, V]> {\n    const t = this;\n    return (function* () {\n      for (const [, v] of t._map) {\n        yield [v, v] as [V, V];\n      }\n      return undefined;\n    })();\n  }\n  get [Symbol.toStringTag]() { return \"ComparableSet\" }\n}\nexport default ComparableSet;\n\nexport function setMap<T, U> (set: Set<T>, callbackfn: (value: T, index: number, set: Set<T>) => U, thisArg?: any) {\n  const retArr = new Array<U>(set.size);\n  let i = 0;\n  for (const v of set) {\n    retArr[i] = callbackfn.call(thisArg, v, i, set);\n    i++;\n  }\n  return retArr;\n}","export const clamp = (val: number, min: number, max: number) => Math.min(Math.max(val, min), max);\n\nexport type EClampVal = number | string | null;\nexport function extendedClamp(r: EClampVal, def = 0, min?: number, max?: number) {\n  const val = r === null || isNaN(+r) ? def : +r;\n\n  switch (arguments.length) {\n    case 3:\n      return Math.max(val, min!);\n    case 4:\n      if (min === undefined)\n        return Math.min(val, max!);\n      return clamp(val, min, max!);\n    default:\n      return val;\n  }\n}","import { EClampVal, extendedClamp } from './Logic/util';\n\nexport const EXP_DEPTH = 'cfg_maxdepth'; // to prevent infinite recursion\nexport const EXP_NONTERM = 'cfg_maxnonterm'; // maximum non-terminals in a row\nexport const EXP_ITER = 'cfg_iter'; // maximum iterations between yields per call\nexport const NUM_KEY = 'cfg_gen_number';\nexport const SYN_KEY = 'cfg_syntax_name';\n\ntype toNumArgsRest = (typeof extendedClamp) extends (str: string, ...args: infer R) => number ? R : never;\nconst readNum = (name: string, _: EClampVal, ...args: toNumArgsRest) => extendedClamp(window.localStorage.getItem(name), ...args);\nconst writeNum = (name: string, val: EClampVal, ...args: toNumArgsRest) => {\n  const v = extendedClamp(val, ...args);\n  window.localStorage.setItem(name, '' + v);\n  return v;\n};\ntype Op = typeof readNum & typeof writeNum;\n\nconst maxDepth = (operation: Op, val: EClampVal) => operation(EXP_DEPTH, val, 20);\nconst maxNonTerms = (operation: Op, val: EClampVal) => operation(EXP_NONTERM, val, 10);\nconst maxIter = (operation: Op, val: EClampVal) => operation(EXP_ITER, val, 5000);\nconst genNum = (operation: Op, val: EClampVal) => operation(NUM_KEY, val, 15, 1, 999);\n\nexport const readMaxDepth = maxDepth.bind(null, readNum, null);\nexport const writeMaxDepth = maxDepth.bind(null, writeNum);\nexport const readMaxNonTerms = maxNonTerms.bind(null, readNum, null);\nexport const writeMaxNonTerms = maxNonTerms.bind(null, writeNum);\nexport const readMaxIter = maxIter.bind(null, readNum, null);\nexport const writeMaxIter = maxIter.bind(null, writeNum);\nexport const readGenNum = genNum.bind(null, readNum, null);\nexport const writeGenNum = genNum.bind(null, writeNum);\n\n\nexport type GrammarSyntax = 'fcs' | 'bnf';\nconst validateSyntax = (val: string | null): GrammarSyntax => val === 'fcs' || val === 'bnf' ? val : 'fcs';\nexport const readSyntax = () => validateSyntax(window.localStorage.getItem(SYN_KEY));\nexport const writeSyntax = (val: string) => {\n  const syn = validateSyntax(val);\n  window.localStorage.setItem(SYN_KEY, syn);\n  return syn;\n};","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettings(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 174.248 174.248\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.145,73.91c-0.413-2.722-2.29-4.993-4.881-5.912l-13.727-4.881c-0.812-2.3-1.733-4.536-2.754-6.699l6.247-13.146 c1.179-2.479,0.899-5.411-0.729-7.628c-5.265-7.161-11.556-13.452-18.698-18.693c-2.219-1.629-5.141-1.906-7.625-0.724 l-13.138,6.242c-2.163-1.021-4.402-1.94-6.704-2.752l-4.883-13.729c-0.919-2.586-3.184-4.458-5.9-4.876 c-9.65-1.483-16.792-1.483-26.457,0c-2.713,0.418-4.981,2.29-5.9,4.876l-4.883,13.729c-2.302,0.812-4.541,1.731-6.702,2.752 l-13.143-6.242c-2.479-1.181-5.406-0.904-7.623,0.724c-7.142,5.241-13.433,11.532-18.698,18.693 c-1.629,2.217-1.908,5.148-0.729,7.628l6.247,13.146c-1.021,2.159-1.94,4.4-2.754,6.699L5.982,68.003 c-2.589,0.919-4.463,3.189-4.879,5.907c-0.749,4.92-1.099,9.115-1.099,13.219c0,4.098,0.35,8.299,1.099,13.219 c0.413,2.722,2.29,4.993,4.881,5.912l13.727,4.881c0.814,2.304,1.736,4.541,2.754,6.704l-6.247,13.141 c-1.179,2.479-0.899,5.411,0.727,7.623c5.258,7.156,11.549,13.447,18.7,18.698c2.217,1.629,5.144,1.911,7.625,0.724l13.138-6.242 c2.163,1.021,4.402,1.94,6.704,2.752l4.883,13.729c0.919,2.586,3.184,4.458,5.9,4.876c4.828,0.744,9.154,1.104,13.228,1.104 c4.074,0,8.401-0.36,13.228-1.104c2.715-0.418,4.981-2.29,5.9-4.876l4.883-13.729c2.302-0.812,4.541-1.731,6.704-2.752 l13.138,6.242c2.484,1.186,5.411,0.904,7.628-0.724c7.159-5.26,13.45-11.551,18.698-18.698c1.626-2.212,1.906-5.144,0.727-7.623 l-6.247-13.141c1.021-2.163,1.942-4.405,2.754-6.704l13.727-4.881c2.591-0.919,4.468-3.189,4.881-5.912 c0.749-4.92,1.099-9.12,1.099-13.219S173.894,78.829,173.145,73.91z M158.949,93.72l-12.878,4.58 c-2.251,0.797-3.982,2.625-4.66,4.92c-1.15,3.889-2.664,7.569-4.504,10.943c-1.142,2.1-1.213,4.619-0.187,6.777l5.841,12.285 c-2.822,3.389-5.943,6.515-9.337,9.334l-12.283-5.834c-2.161-1.036-4.672-0.953-6.775,0.185c-3.379,1.838-7.061,3.35-10.953,4.502 c-2.29,0.676-4.118,2.406-4.917,4.657l-4.582,12.883c-4.677,0.476-8.503,0.476-13.18,0l-4.582-12.883 c-0.8-2.246-2.628-3.982-4.917-4.657c-3.894-1.152-7.579-2.664-10.953-4.502c-2.103-1.147-4.619-1.22-6.775-0.185l-12.283,5.839 c-3.391-2.825-6.512-5.946-9.337-9.339l5.841-12.285c1.026-2.159,0.955-4.677-0.187-6.777c-1.835-3.364-3.35-7.049-4.504-10.948 c-0.678-2.29-2.411-4.118-4.66-4.915l-12.878-4.58c-0.243-2.343-0.36-4.502-0.36-6.592s0.117-4.244,0.36-6.587l12.881-4.584 c2.248-0.797,3.979-2.625,4.657-4.915c1.152-3.889,2.667-7.574,4.504-10.953c1.142-2.095,1.213-4.619,0.187-6.772l-5.841-12.285 c2.827-3.393,5.948-6.519,9.337-9.339l12.288,5.839c2.151,1.036,4.677,0.953,6.775-0.185c3.372-1.838,7.054-3.35,10.948-4.502 c2.29-0.676,4.118-2.411,4.917-4.657l4.582-12.883c4.633-0.481,8.466-0.481,13.18,0l4.582,12.883 c0.8,2.246,2.628,3.982,4.917,4.657c3.894,1.152,7.579,2.664,10.953,4.502c2.103,1.147,4.614,1.22,6.775,0.185l12.283-5.839 c3.389,2.82,6.51,5.946,9.337,9.339l-5.841,12.285c-1.026,2.154-0.955,4.677,0.187,6.772c1.843,3.389,3.357,7.069,4.504,10.948 c0.678,2.295,2.409,4.123,4.66,4.92l12.878,4.58c0.243,2.343,0.36,4.502,0.36,6.592S159.192,91.377,158.949,93.72z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M87.124,50.802c-19.062,0-34.571,15.508-34.571,34.571s15.508,34.571,34.571,34.571s34.571-15.508,34.571-34.571 S106.186,50.802,87.124,50.802z M87.124,105.009c-10.827,0-19.636-8.809-19.636-19.636s8.809-19.636,19.636-19.636 s19.636,8.809,19.636,19.636S97.951,105.009,87.124,105.009z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettings);\nexport default __webpack_public_path__ + \"static/media/settings.63b02b73.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useMemo, useState } from 'react';\nimport type { Grammar } from '../Logic/grammar';\nimport Query from '../Logic/providers/querys';\nimport { setMap } from '../Logic/set';\nimport { readGenNum, writeGenNum } from '../values';\nimport stylesBody from './bodyComponent.module.scss';\nimport styles from './GrammarOutput.module.scss';\nimport textarea from './Textarea.module.scss';\n\n\ninterface Props {\n  className?: string;\n}\n\nconst GrammarOutput = ({ className }: Props) => {\n  const [ strings, setStrings ] = useState(new Set<string>());\n  const [ status, setStatus ] = useState([\"\",\"\"]);\n\n  const stringEls = useMemo(() => setMap(strings, (str, ind) => (\n    <li key={ind} className=\"monospace\">\n      {str.split(/\\r\\n|\\r|\\n|\\\\n/g).map((val, key) => (\n        <span key={key} className={val === '' ? styles.empty : ''}>{val || 'ε'}</span>\n      ))}\n    </li>\n  )), [strings]);\n  \n  return (\n    <div\n      className={`${className || ''} status-${status[0]} App-bodyComponent`}\n      data-testid=\"output\"\n    >\n      <div className={`${textarea.area} ${stylesBody.textarea}`}>\n        <h2 className={textarea.title}>Strings</h2>\n        <div className={styles.strings}>\n          <ul data-testid=\"strings\">\n            {stringEls}\n          </ul>\n        </div>\n        <div className=\"children\">\n          <div className=\"row1\">\n            <span className=\"status\" role=\"status\">\n              {status[1]}\n            </span>\n          </div>\n          <Inputs strings={strings} setStrings={setStrings} setStatus={setStatus} />\n        </div>\n      </div>\n    </div>\n  )\n};\n\ninterface InputProps {\n  strings: Set<string>;\n  setStrings: (n: Set<string>) => void;\n  setStatus: (n: string[]) => void;\n}\n\nconst checkClick = (e: React.MouseEvent, grammar: Grammar | undefined): grammar is Grammar => {\n  const target = e.target as HTMLElement;\n  \n  if (target.tagName === \"INPUT\") return false;\n  target.blur();\n\n  if (!grammar) return false;\n  return true;\n};\n\nconst getStrings = (grammar: Grammar, strings: Set<string>, number: number, setStatus: InputProps['setStatus']) => {\n  let hasWarn = false;\n  let i;\n  const startSize = strings.size;\n  for (i = 0; i < number; i = strings.size - startSize) {\n    const str = grammar.next();\n    if (str === undefined)\n      break;\n    if (str instanceof Error) {\n      hasWarn = true;\n      setStatus([\"warn\", str.message]);\n      break;\n    }\n    strings.add(str);\n  }\n  return { i, hasWarn };\n}\n\nconst Inputs = ({ strings, setStrings, setStatus }: InputProps) => {\n  const { grammar } = Query.useContainer();\n  const [ buttonDisabled, setButtonDisabled ] = useState(false);\n  const [ isClear, setClear ] = useState(false);\n  const [ number, setNumber ] = useState(readGenNum());\n\n  const clickGenerate = (e: React.MouseEvent) => {\n    if (!checkClick(e, grammar))\n      return;\n\n    setButtonDisabled(true);\n    setStatus([\"\", \"\"]);\n\n    const { i, hasWarn } = getStrings(grammar, strings, number, setStatus);\n    setStrings(new Set(strings));\n\n    if (i < number && !hasWarn) {\n      setStatus([\"info\", \"Grammar exhausted\"]);\n      return;\n    }\n    setButtonDisabled(false);\n  };\n\n  const clickClear = (e: React.MouseEvent) => {\n    (e.target as HTMLElement).blur();\n    grammarUpdated();\n  };\n\n  const updateNum = (e: React.ChangeEvent) => {\n    const val = (e.target as HTMLInputElement).value;\n    if (val.trim() === '')\n      return setClear(true);\n    setNumber(writeGenNum(val));\n    setClear(false);\n  };\n\n  const grammarUpdated = () => {\n    setStrings(new Set());\n\n    try {\n      grammar?.checkValid();\n      grammar?.clear();\n      setButtonDisabled(false);\n      setStatus([\"\", \"\"]);\n    } catch (err) {\n      setButtonDisabled(true);\n      setStatus([\"error\", `${err}`]);\n    }\n  };\n  useEffect(grammarUpdated, [grammar, setStatus, setStrings]);\n\n  return (\n    <div className=\"row2\">\n      <button\n        className=\"button secondary\"\n        onClick={clickGenerate}\n        disabled={buttonDisabled}\n        aria-label=\"Get more strings\"\n        data-testid=\"generate\"\n      >\n        Get <input\n          type=\"number\"\n          className=\"input secondary_alt\"\n          size={3}\n          value={isClear ? '' : number}\n          onChange={updateNum}\n          aria-label=\"Number of strings to get\"\n          data-testid=\"number\"\n          /> more\n      </button>\n      <button\n        className=\"button secondary\"\n        onClick={clickClear}\n        aria-label=\"Clear strings\"\n        data-testid=\"clear\"\n      >\n        Clear\n      </button>\n    </div>\n  )\n}\nexport default GrammarOutput;","import ComparableSet, { Comparable } from \"./../set\";\n\nabstract class GSymbol {\n  constructor(public symbol: string) {\n  }\n\n  abstract equals(other: GSymbol): boolean;\n}\nexport class NonTerminal extends GSymbol {\n  equals(other: GSymbol): boolean {\n    return other instanceof NonTerminal && other.symbol === this.symbol;\n  }\n  get [Symbol.toStringTag]() { return \"NonTerminal\" }\n}\nexport class Terminal extends GSymbol {\n  equals(other: GSymbol): boolean {\n    return other instanceof Terminal && other.symbol === this.symbol;\n  }\n  static construct(sym: string, strict = false) {\n    return EmptySymbol.isEmpty(sym, strict) ? new EmptySymbol() : new Terminal(sym);\n  }\n  get [Symbol.toStringTag]() { return \"Terminal\" }\n}\nexport class EmptySymbol extends Terminal {\n  constructor() {\n    super(\"\");\n  }\n  static isEmpty(char: string, strict = false) {\n    return char === '' || (!strict && (char === '^' || char === 'ε'));\n  }\n  get [Symbol.toStringTag]() { return \"EmptySymbol\" }\n}\n\nexport type AnySymbol = Terminal | NonTerminal | undefined;\nexport type Rule = (Terminal | NonTerminal)[];\n\nexport class QueueElement {\n  constructor(public rule: Rule, public before = \"\", public depth = 0, public nonTerminals = 0) {\n  }\n}\n\nexport class ParseState<Sym extends AnySymbol = AnySymbol> implements Comparable {\n  constructor(public left: NonTerminal, public before: Rule, public symbol: Sym, public after: Rule, public origin: number) {\n    this.left = left;\n    this.before = before;\n    this.symbol = symbol;\n    this.after = after;\n    this.origin = origin;\n  }\n  isFinished(): this is ParseState<undefined> { return this.symbol === undefined || this.symbol instanceof EmptySymbol; }\n  isTerminal(): this is ParseState<Terminal> { return this.symbol instanceof Terminal; }\n  isNonTerminal(): this is ParseState<NonTerminal> { return this.symbol instanceof NonTerminal; }\n\n  hash() {\n    const str = (cur: AnySymbol) => (cur instanceof NonTerminal ? `\\x01${cur.symbol}\\x01` : cur?.symbol || '');\n    const r = (prev: string, cur: AnySymbol) => prev + str(cur);\n    return `${this.left.symbol}→${this.before.reduce(r, '')}\\x02•${str(this.symbol)}${this.after.reduce(r, '')}\\x03,${this.origin}`;\n  }\n}\nexport type ParseStateSet = ComparableSet<ParseState>[];\nexport type InferSym<T extends ParseState> = T extends ParseState<infer U> ? U : never;\nexport type NonNull<T extends ParseState> = ParseState<NonNullable<InferSym<T>>>;\n\nexport type ParseHandle = (char: string, literal: boolean) => void;\nexport class Parse {\n  constructor(public handle: ParseHandle, public currentSymbol?: NonTerminal, public rule: Rule = [], public currentInput = '', public whitespace = '', public data = '') {\n  }\n}\n","import { readMaxDepth, readMaxIter, readMaxNonTerms } from '../../values';\nimport { EmptySymbol, NonNull as ParseStateNonNull, NonTerminal, Parse, ParseState, ParseStateSet, QueueElement, Rule, Terminal } from './grammartypes';\nimport ComparableSet from './../set';\n\n// eslint-disable-next-line no-control-regex\nexport const control = /[\\u0000-\\u0008\\u000E-\\u001f\\u007f-\\u009F]/; // control except whitespace https://stackoverflow.com/a/46637343/\nexport const whitespace = /\\s/;\n\nexport abstract class Grammar {\n  private gen: Generator<string | Error, undefined, never> | undefined = undefined;\n  private maxDepth = readMaxDepth();\n  private maxNonTerms = readMaxNonTerms();\n  private maxIter = readMaxIter();\n  protected currentState: Parse;\n\n  protected rules: { [key: string]: Rule[] } = {};\n  abstract clear(): void;\n  abstract matches(str: string): boolean;\n  protected abstract checkParseValid(): void;\n\n  constructor() {\n    this.currentState = new Parse(() => { /* */ });\n  }\n  \n  next(): string | Error | undefined {\n    if (!this.gen)\n      throw new Error(\"Attempted to call .next without a generator, this should never happen!\");\n    return this.gen.next().value;\n  }\n  \n  checkValid(): void {\n    // these are internal sanity checks, they should indeed never happen ;)\n    for (const sym in this.rules) {\n      const rules = this.rules[sym];\n      for (const rule of rules) {\n        if (rule.length === 0)\n          throw new Error('Empty rule, this should never happen!');\n        if (rule.length === 1 && rule[0].symbol === '' && !(rule[0] instanceof EmptySymbol))\n          throw new Error('Empty symbol that isn\\'t an EmptySymbol, this should never happen!');\n        if (rule.length > 1 && rule.findIndex(s => s instanceof EmptySymbol || s.symbol.length === 0) !== -1)\n          throw new Error('EmptySymbol found in a longer rule, this should never happen!');\n      }\n    }\n  }\n\n  protected parseRules(rules: string, start: Parse, escape: string | RegExp) {\n    this.currentState = start;\n\n    let line = 0, column = 0;\n    let literal = false;\n    try {\n      for (let i = 0; (column++, i < rules.length); i++) {\n        const char = rules[i];\n        if (char.match(control))\n          console.debug(`Purged control character ${char} at ${i}`);\n        else if (char.match(escape) && !literal)\n          literal = true;\n        else if (char === '\\n') {\n          if (!literal)\n            this.endLine(start);\n          column = 0;\n          line ++;\n          literal = false;\n        } else {\n          this.currentState.handle.call(this, char, literal);\n          literal = false;\n        }\n      }\n      this.endLine(start);\n    } catch (e) {\n      throw new Error(`${(e as Error).message} at line ${line + 1}, column ${column}`);\n    }\n  }\n\n  protected checkBranch(char: string, literal: boolean, ignoreWhitespace: boolean) {\n    if (this.currentState.currentInput === '' && !literal && !ignoreWhitespace && char.match(whitespace))\n      return null;\n    if (char === '|' && !literal) {\n      this.endLine();\n      return null;\n    }\n    if (char.match(whitespace)) {\n      this.currentState.whitespace += char;\n      return null;\n    }\n    if (literal)\n      return this.toSpecial(char);\n    return char;\n  }\n\n  protected toSpecial(char: string) {\n    if (char === 'n')\n      return '\\n';\n    if (char === 't')\n      return '\\t';\n    if (char === 'r')\n      return '\\r';\n    if (char === 'f')\n      return '\\f';\n    return char;\n  }\n\n  protected mergeTerminals(rule: Rule) {\n    // merge terminals\n    for (let i = rule.length - 1; i > 0; i--) {\n      if (!(rule[i] instanceof Terminal) || !(rule[i - 1] instanceof Terminal))\n        continue;\n      rule[i - 1].symbol += rule[i].symbol;\n      rule.splice(i, 1);\n    }\n  }\n\n  private endLine(start?: Parse) {\n    this.checkParseValid();\n    if (this.currentState.currentSymbol === undefined)\n      return;\n    const s = this.currentState.currentSymbol.symbol;\n    const t = Terminal.construct(this.currentState.currentInput);\n    if (this.currentState.rule.length === 0 || !(t instanceof EmptySymbol))\n      this.currentState.rule.push(t);\n    if (s in this.rules)\n      this.rules[s].push(this.currentState.rule);\n    else\n      this.rules[s] = [this.currentState.rule];\n    if (start)\n      this.currentState = start;\n    else {\n      this.currentState.currentInput = '';\n      this.currentState.whitespace = '';\n      this.currentState.rule = [];\n    }\n  }\n\n  protected initGenerator(startsym: string) {\n    const g = this;\n    let iterSinceYield = 0;\n    // search all possible paths using BFS\n    function* generator(queue: QueueElement[]): Generator<string | Error, undefined, never> {\n      let next: QueueElement | undefined;\n      while ((next = queue.shift())) {\n        iterSinceYield ++;\n        let symbol = g.expandTerminal(next);\n        const { rule, before, depth, nonTerminals } = next;\n        if (symbol === undefined) { // no more symbols to process\n          yield before;\n          iterSinceYield = 0;\n          continue;\n        }\n        if (iterSinceYield >= g.maxIter) {\n          yield new Error(`Iterated ${iterSinceYield} times without finding a new value`);\n          iterSinceYield = 0;\n        }\n        if (depth > g.maxDepth || nonTerminals > g.maxNonTerms)\n          continue;\n        g.expandNonTerminal(symbol, rule, queue, next);\n      }\n      return undefined;\n    }\n    this.gen = generator([new QueueElement([new NonTerminal(startsym)])]);\n  }\n\n  private expandTerminal(next: QueueElement) {\n    const rule = next.rule\n    let symbol = rule.shift();\n    while (symbol instanceof Terminal) { // string all terminals together\n      next.before += symbol.symbol;\n      symbol = rule.shift();\n      next.nonTerminals = 0;\n    }\n    return symbol;\n  }\n\n  private expandNonTerminal(symbol: Terminal, rule: Rule, queue: QueueElement[], next: QueueElement) {\n    const { before, depth, nonTerminals } = next;\n    // create a new branch for every possible path\n    const applicable = this.rules[symbol.symbol];\n    for (const nrule of applicable)\n      queue.push(new QueueElement([...nrule, ...rule], before, depth + 1, nonTerminals + 1));\n  }\n\n  protected match(str: string, startsym: string): boolean {\n    // https://en.wikipedia.org/wiki/Earley_parser#Pseudocode\n    const state: ParseStateSet = [];\n    state.push(new ComparableSet());\n    const top  = new ParseState(new NonTerminal(''), [], new NonTerminal(startsym), [], 0);\n    const topc = new ParseState(new NonTerminal(''), [new NonTerminal(startsym)], undefined, [], 0);\n    state[0].add(top);\n\n    // for each 'word'\n    for (let k = 0; k <= str.length; k++) { // need to finish up after the last character\n      state.push(new ComparableSet()); // k+1\n\n      for (const s of state[k]) { // state[k] can expand\n        if (s.isFinished()) {\n          this.completer(s, k, state);\n        } else if (s.isNonTerminal()) {\n          this.predictor(s, k, state);\n        } else if (s.isTerminal()) {\n          this.scanner(s, k, state, str);\n        }\n      }\n    }\n\n    return state[str.length].has(topc);\n  }\n\n  private completer(s: ParseState<undefined>, k: number, state: ParseStateSet) {\n    for (const n of state[s.origin]) {\n      if (n.isFinished())\n        continue;\n      const ns = n as ParseStateNonNull<typeof n>;\n      if (ns.symbol.equals(s.left))\n        this.nextInRule(ns, k, state);\n    }\n  }\n\n  private predictor(s: ParseState<NonTerminal>, k: number, state: ParseStateSet) {\n    for (const rule of this.rules[s.symbol.symbol]) {\n      state[k].add(new ParseState(s.symbol, [], rule[0], rule.slice(1), k));\n    }\n    // if we finished any of the new symbols already, that symbol would drown\n    for (const n of state[k]) {\n      if (n.isFinished())\n        this.completer(n, k, state);\n    }\n  }\n\n  private scanner(s: ParseState<Terminal>, k: number, state: ParseStateSet, str: string) {\n    if (k === str.length) // nothing to scan if we're at the end of the string\n      return;\n    if (str[k] === s.symbol.symbol[0]) {\n      this.nextInRule(s, k + 1, state);\n    }\n  }\n\n  private nextInRule(n: ParseState<Terminal | NonTerminal>, k: number, state: ParseStateSet) {\n    // need to go to next symbol in rule\n    // terminals can be multiple chars long, so pop first, otherwise go to next in rule\n    const before = [...n.before];\n    if (n.symbol instanceof Terminal) {\n      const l = before.length - 1;\n      if (before[l] instanceof Terminal) {\n        before[l] = new Terminal(before[l].symbol + n.symbol.symbol[0]);\n      } else {\n        before.push(new Terminal(n.symbol.symbol[0]));\n      }\n    } else {\n      before.push(n.symbol);\n    }\n\n    if (n.symbol instanceof Terminal && n.symbol.symbol.length > 1) {\n      state[k].add(new ParseState(n.left, before, new Terminal(n.symbol.symbol.slice(1)), [...n.after], n.origin));\n    } else {\n      state[k].add(new ParseState(n.left, before, n.after[0], n.after.slice(1), n.origin));\n    }\n  }\n}\n","import { Grammar, NonTerminal, Parse, Rule, Terminal, whitespace } from '.';\n\nconst nonTerminal = /[A-Z]/;\nconst escape = /[\\\\]/;\n\n\nclass FCSGrammar extends Grammar {\n  constructor(rules: string) {\n    super();\n    this.parseRules(rules, new Parse(this.parseLeft), escape);\n    for (const sym in this.rules) {\n      const r = this.rules[sym];\n      for (const rule of r) {\n        this.extractTerminals(rule);\n      }\n    }\n  }\n\n  private parseLeft(char: string, literal: boolean) {\n    if (char.match(whitespace)) {\n      if (literal)\n        throw new Error(`Unexpected literal '${char}'`);\n      return; // ignore whitespace\n    }\n    if (!char.match(nonTerminal) || this.currentState.currentSymbol !== undefined)\n      throw new Error(`Unexpected '${char}', expected Non-Terminal`);\n    this.currentState = new Parse(this.parseIndicator, new NonTerminal(char));\n  }\n\n  private parseIndicator(char: string, literal: boolean) {\n    if (this.currentState.currentInput === '-') {\n      if (char !== '>')\n        throw new Error(`Expected '>', got '${char}'`);\n      this.currentState = new Parse(this.parseBranches, this.currentState.currentSymbol);\n      return;\n    }\n    if (char.match(whitespace)) {\n      if (literal)\n        throw new Error(`Unexpected literal '${char}'`);\n      return; // ignore whitespace\n    }\n    if (!char.match(/[→-]/))\n      throw new Error(`Expected '->' or '→', got '${char}'`);\n    if (char === '-')\n      this.currentState.currentInput = '-';\n    else\n      this.currentState = new Parse(this.parseBranches, this.currentState.currentSymbol);\n  }\n\n  private parseBranches(char: string, literal: boolean) {\n    const nchar = this.checkBranch(char, literal, this.currentState.rule.length !== 0);\n    if (nchar === null)\n      return;\n    if (char.match(nonTerminal) && !literal) {\n      if (this.currentState.currentInput !== '' || this.currentState.whitespace !== '')\n        this.currentState.rule.push(Terminal.construct(this.currentState.currentInput + this.currentState.whitespace));\n      this.currentState.rule.push(new NonTerminal(nchar));\n      this.currentState.currentInput = '';\n    } else {\n      this.currentState.currentInput += this.currentState.whitespace + nchar;\n    }\n    this.currentState.whitespace = '';\n  }\n\n  protected checkParseValid() {\n    if (this.currentState.handle === this.parseIndicator)\n      throw new Error('Unexpected line ending, expected rule indicator');\n  }\n\n  private extractTerminals(rule: Rule) {\n    // convert all non-existant non-terminals to terminals\n    for (let i = 0; i < rule.length; i++) {\n      if (!(rule[i] instanceof NonTerminal))\n        continue;\n      if (rule[i].symbol in this.rules)\n        continue;\n      rule[i] = new Terminal(rule[i].symbol);\n    }\n    this.mergeTerminals(rule);\n  }\n\n  clear() {\n    this.initGenerator('S');\n  }\n\n  checkValid() {\n    super.checkValid();\n    if (!('S' in this.rules))\n      throw new Error(\"Startsymbol 'S' not found\");\n  }\n\n  matches(str: string) {\n    return this.match(str, 'S');\n  }\n}\n\nexport default FCSGrammar;","import { Grammar, NonTerminal, Parse, Rule, Terminal, whitespace } from '.';\nimport { EmptySymbol } from './grammartypes';\n\nconst escape = /[\\\\]/;\n\n\nclass BNFGrammar extends Grammar {\n  constructor(rules: string) {\n    super();\n    this.parseRules(rules, new Parse(this.parseLeftStart), escape);\n    this.checkHasUndeclaredTerminals();\n    for (const sym in this.rules) {\n      const r = this.rules[sym];\n      for (const rule of r) {\n        this.fixTerminals(rule);\n      }\n    }\n  }\n\n  private parseLeftStart(char: string, literal: boolean) {\n    if (char.match(whitespace)) {\n      if (literal)\n        throw new Error(`Unexpected literal '${char}'`);\n      return; // ignore whitespace\n    }\n    if (char !== '<')\n      throw new Error(`Unexpected '${char}', expected '<'`);\n    this.currentState = new Parse(this.parseLeft, undefined);\n  }\n\n  private parseLeft(char: string, literal: boolean) {\n    if (char === '>' && !literal) {\n      if (this.currentState.currentInput === '')\n        throw new Error('Empty non-terminals not allowed');\n      this.currentState = new Parse(this.parseIndicator, new NonTerminal(this.currentState.currentInput));\n      return;\n    }\n    this.currentState.currentInput += char;\n  }\n\n  private parseIndicator(char: string, literal: boolean) {\n    if (this.currentState.currentInput === ':') {\n      if (char !== ':')\n        throw new Error(`Expected ':', got '${char}'`);\n      this.currentState.currentInput = '::';\n      return;\n    }\n    if (this.currentState.currentInput === '::') {\n      if (char !== '=')\n        throw new Error(`Expected '=', got '${char}'`);\n      this.currentState = new Parse(this.parseBranches, this.currentState.currentSymbol);\n      return;\n    }\n    if (char.match(whitespace)) {\n      if (literal)\n        throw new Error(`Unexpected literal '${char}'`);\n      return; // ignore whitespace\n    }\n    if (char !== ':')\n      throw new Error(`Expected '::=', got '${char}'`);\n    this.currentState.currentInput = ':';\n  }\n\n  private parseBranches(char: string, literal: boolean) {\n    const nchar = this.checkBranch(char, literal, true);\n    if (nchar === null)\n      return;\n    if (char === '<' && !literal) {\n      this.currentState = new Parse(this.parseNonTerminal, this.currentState.currentSymbol, this.currentState.rule);\n      return;\n    }\n    if (char === '\"' && !literal) {\n      this.currentState = new Parse(this.parseTerminal, this.currentState.currentSymbol, this.currentState.rule, '', '', '\"');\n      return;\n    }\n    if (char === \"'\" && !literal) {\n      this.currentState = new Parse(this.parseTerminal, this.currentState.currentSymbol, this.currentState.rule, '', '', \"'\");\n      return;\n    }\n    throw new Error(`Expected '<', '\"', or ''', got${literal ? ' literal' : ''} '${char}'`);\n  }\n\n  private parseNonTerminal(char: string, literal: boolean) {\n    if (char === '>' && !literal) {\n      if (this.currentState.currentInput === '')\n        throw new Error('Empty non-terminals not allowed');\n      this.currentState.rule.push(new NonTerminal(this.currentState.currentInput));\n      this.currentState = new Parse(this.parseBranches, this.currentState.currentSymbol, this.currentState.rule);\n      return;\n    }\n    this.currentState.currentInput += char;\n  }\n\n  private parseTerminal(char: string, literal: boolean) {\n    if (char === this.currentState.data && !literal) {\n      this.currentState.rule.push(Terminal.construct(this.currentState.currentInput, true));\n      this.currentState = new Parse(this.parseBranches, this.currentState.currentSymbol, this.currentState.rule);\n      return;\n    }\n    if (literal)\n      char = this.toSpecial(char);\n    this.currentState.currentInput += char;\n  }\n\n  protected checkParseValid() {\n    if (this.currentState.handle === this.parseIndicator)\n      throw new Error('Unexpected line ending, expected rule indicator');\n    if (this.currentState.handle === this.parseLeft || this.currentState.handle === this.parseNonTerminal || this.currentState.handle === this.parseTerminal)\n      throw new Error('Unexpected line ending, symbol declaration ended early');\n    if (this.currentState.handle === this.parseBranches && this.currentState.rule.length === 0)\n      throw new Error('Branches must not be empty, put at least one symbol');\n  }\n\n  private checkHasUndeclaredTerminals() {\n    for (const sym in this.rules) {\n      const r = this.rules[sym];\n      for (const rule of r) {\n        for (const s of rule) {\n          if (!(s instanceof NonTerminal))\n            continue;\n          if (s.symbol in this.rules)\n            continue;\n          throw new Error(`Undeclared symbol ${s.symbol}`);\n        }\n      }\n    }\n  }\n\n  private fixTerminals(rule: Rule) {\n    // purge empty symbols\n    for (let i = rule.length - 1; i >= 0 && rule.length > 1; i--) {\n      if (!(rule[i] instanceof EmptySymbol))\n        continue;\n      rule.splice(i, 1);\n    }\n    this.mergeTerminals(rule);\n  }\n\n  clear() {\n    this.initGenerator('start');\n  }\n\n  checkValid() {\n    super.checkValid();\n    if (!('start' in this.rules))\n      throw new Error(\"Startsymbol 'start' not found\");\n  }\n\n  matches(str: string) {\n    return this.match(str, 'start');\n  }\n}\n\nexport default BNFGrammar;","import { createContainer } from 'unstated-next';\nimport { useState, useCallback } from 'react';\nimport { readSyntax, GrammarSyntax, writeSyntax } from '../../values';\nimport FCSGrammar from '../grammar/fcsgrammar';\nimport BNFGrammar from '../grammar/bnfgrammar';\n\nconst useSyntax = () => {\n  const [ syntax, _setSyntax ] = useState(readSyntax());\n  const setSyntax = useCallback((val: string) => {\n    _setSyntax(writeSyntax(val));\n  }, [_setSyntax]);\n\n  const createGrammar = useCallback((rules: string) => createGrammarFromSyntax(syntax, rules), [syntax]);\n  \n  return { syntax, setSyntax, createGrammar };\n};\n\nconst Syntax = createContainer(useSyntax);\nexport default Syntax;\n\nexport const createGrammarFromSyntax = (syntax: GrammarSyntax, rules: string) => {\n  if (syntax === 'fcs')\n    return new FCSGrammar(rules);\n  return new BNFGrammar(rules);\n};","import React, { PropsWithChildren } from 'react';\nimport uniqueString from 'unique-string';\nimport styles from './Textarea.module.scss';\n\n\ninterface Props {\n  id?: string;\n  className?: string;\n  title?: string;\n  placeholder?: string;\n  onChange?: ((event: React.ChangeEvent<HTMLTextAreaElement>) => void);\n  value?: string;\n  aria?: string;\n}\n\nconst Textarea = ({ id, className, title, placeholder, onChange, value, aria, children }: PropsWithChildren<Props>) => {\n  const id_ = id || uniqueString();\n  return (\n    <div className={`${styles.area} ${className || ''}`} data-testid=\"container\">\n      {title && (\n        <h2 className={styles.title}>\n          <label\n            htmlFor={id_}\n            data-testid=\"label\"\n          >{title}</label>\n        </h2>\n      )}\n      <textarea\n        id={id_}\n        className=\"textarea monospace\"\n        onChange={onChange}\n        draggable=\"false\"\n        placeholder={typeof placeholder === \"string\" ? placeholder : \"Enter text here...\"}\n        value={value}\n        aria-label={aria}\n      ></textarea>\n      {children && (\n        <div className=\"children\">\n          {children}\n        </div>\n      )}\n    </div>\n  )\n};\nexport default Textarea;","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Query from '../Logic/providers/querys';\nimport Syntax from '../Logic/providers/syntaxes';\nimport styles from './bodyComponent.module.scss';\nimport Textarea from './Textarea';\n\nconst placeholders = {\n  fcs: ['S -> 1 | 2 | 3', 'S -> 4 | 5 | 6'],\n  bnf: ['<start> ::= \"1\" | \"2\" | \"3\"', '<start> ::= \"4\" | \"5\" | \"6\"'],\n};\n\ninterface Props {\n  className?: string;\n}\n\nconst RulesInput = ({ className }: Props) => {\n  const { rules, setRules, setGrammar } = Query.useContainer();\n  const { syntax, createGrammar } = Syntax.useContainer();\n  const [ status, setStatus ] = useState([\"\",\"\"]);\n  const timeout = useRef(0);\n\n  const rulesChange = (e: React.ChangeEvent) => {\n    setRules((e.target as HTMLInputElement).value);\n  };\n\n  const clickGenerate = (e: React.MouseEvent) => {\n    (e.target as HTMLElement).blur();\n    loadRules();\n  };\n\n  // parse rules, debounced\n  const loadRules = useCallback(() => {\n    timeout.current = window.setTimeout(() => {\n      try {\n        setGrammar(createGrammar(rules));\n        setStatus([\"ok\", \"\"]);\n      } catch (err) {\n        setStatus([\"error\",`${err}`]);\n      }\n    }, 50);\n    return () => window.clearTimeout(timeout.current);\n  }, [rules, setGrammar, createGrammar]);\n\n  useEffect(loadRules, [rules, loadRules]);\n\n  return (\n    <div\n      className={`${className || ''} status-${status[0]} App-bodyComponent`}\n      data-testid=\"rules-input\"\n    >\n      <Textarea\n        className={styles.textarea}\n        value={rules}\n        onChange={rulesChange}\n        title=\"Rules\"\n        aria=\"Rules that describe the grammar\"\n        placeholder={`Enter rules here... e.g.\\n${placeholders[syntax].join('\\n')}`}\n      >\n        <div className=\"row1\">\n          <div className=\"status\" role=\"status\">\n            {status[1]}\n          </div>\n        </div>\n        <div className=\"row2\">\n          <button\n            className=\"button secondary\"\n            onClick={clickGenerate}\n          >\n            Regenerate Model\n          </button>\n        </div>\n      </Textarea>\n    </div>\n  )\n};\nexport default RulesInput;","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Query from '../Logic/providers/querys';\nimport styles from './bodyComponent.module.scss';\nimport Textarea from './Textarea';\n\n\ninterface Props {\n  className?: string;\n}\n\nconst TextInput = ({ className }: Props) => {\n  const { input, setInput, grammar } = Query.useContainer();\n  const [ status, setStatus ] = useState([\"\", \"\"]);\n  const [ buttonDisabled, setButtonDisabled ] = useState(false);\n  const timeout = useRef(0);\n\n  const inputChange = (e: React.ChangeEvent) => {\n    setInput((e.target as HTMLInputElement).value);\n  }\n  \n  const clickMatch = (e: React.MouseEvent) => {\n    (e.target as HTMLElement).blur();\n\n    match();\n  }\n\n  // match input\n  const match = useCallback(() => {\n    try {\n      if (!grammar)\n        throw new Error('No grammar object available');\n      grammar.checkValid();\n      const res = grammar.matches(input);\n      setButtonDisabled(false);\n      setStatus([res ? 'ok' : 'error', `Input ${res ? 'matches' : 'doesn\\'t match'}`]);\n    } catch (err) {\n      setButtonDisabled(true);\n      setStatus([\"error\", `${err}`]);\n    }\n  }, [input, grammar]);\n\n  // debounce matching, on grammar or input change\n  useEffect(() => {\n    timeout.current = window.setTimeout(match, 100);\n    return () => window.clearTimeout(timeout.current);\n  }, [match]);\n\n  return (\n    <div\n      className={`${className || ''} status-${status[0]} App-bodyComponent`}\n      data-testid=\"text-input\"\n    >\n      <Textarea\n        className={styles.textarea}\n        value={input}\n        onChange={inputChange}\n        title=\"Test Input\"\n        aria=\"Input to match with grammar\"\n      >\n        <div className=\"row1\">\n          <span className=\"status\" role=\"status\">\n            {status[1]}\n          </span>\n        </div>\n        <div className=\"row2\">\n          <button\n            className=\"button secondary\"\n            onClick={clickMatch}\n            disabled={buttonDisabled}\n          >\n            Re-Match\n          </button>\n        </div>\n      </Textarea>\n    </div>\n  )\n};\nexport default TextInput;","import React from 'react';\nimport Query from '../Logic/providers/querys';\nimport styles from './Body.module.scss';\nimport GrammarOutput from './GrammarOutput';\nimport RulesInput from './RulesInput';\nimport TextInput from './TextInput';\n\n\ninterface Props {\n  className?: string;\n}\n\nconst Body = ({ className }: Props) => {\n  return (\n    <div\n      className={`${className || ''} ${styles.grid} App-body`}\n      data-testid=\"body\"\n    >\n      <Query.Provider initialState={window.location.hash}>\n        <RulesInput\n          className={styles.left}\n        />\n        <TextInput\n          className={styles.rightTop}\n        />\n        <GrammarOutput\n          className={styles.rightBottom}\n        />\n      </Query.Provider>\n    </div>\n  )\n};\nexport default Body;","export const beginyear = process.env.REACT_APP_BEGIN_YEAR;\nexport const author = process.env.REACT_APP_AUTHOR;\nexport const source = process.env.REACT_APP_GITHUB_URL;","import React from 'react';\nimport { author, beginyear, source } from \"./data\";\n\n\ninterface Props {\n  className?: string;\n}\n\nconst Footer = ({ className }: Props) => {\n  const year = (new Date()).getFullYear().toString(),\n    divider = \" :: \";\n\n  return (\n    <footer\n      className={`${className || ''} App-footer`}\n      data-testid=\"footer\"\n    >\n      {!beginyear || year === beginyear ? year : `${beginyear}-${year}`}\n      {author && ` by ${author}`}\n      {source && (\n        <React.Fragment>\n          <span>{divider}</span>\n          <a href={source} target=\"_blank\" rel=\"noopener noreferrer\">Source</a>\n        </React.Fragment>\n      )}\n    </footer>\n  );\n};\nexport default Footer;","import React, { useState, Fragment } from 'react';\nimport { EXP_DEPTH, EXP_ITER, EXP_NONTERM, readMaxDepth, readMaxIter, readMaxNonTerms, writeMaxDepth, writeMaxIter, writeMaxNonTerms } from '../values';\nimport styles from './Advanced.module.scss';\n\ninterface Props {\n  className?: string;\n  open: boolean;\n  setOpen: (n: boolean) => void;\n}\n\nconst Advanced = ({ className, open, setOpen }: Props) => {\n  const c = `${styles.wrapper} ${open ? styles.open : styles.close}`;\n  return (\n    <div className={`${className || ''} ${c}`}>\n      <h3 className={styles.opener} onClick={() => setOpen(!open)} data-testid=\"opener\">\n        Advanced\n      </h3>\n      <div className={styles.content} data-testid=\"content\">\n        <p className={styles.warn}>Note: These values were chosen carefully, changing them could cause problems.</p>\n        <p><label>Max recursion depth: <Value read={readMaxDepth} write={writeMaxDepth} name={EXP_DEPTH} /></label>\n           <label>Max non-terminals in a row: <Value read={readMaxNonTerms} write={writeMaxNonTerms} name={EXP_NONTERM} /></label>\n           <label>Max iterations per call: <Value read={readMaxIter} write={writeMaxIter} name={EXP_ITER} /></label></p>\n      </div>\n    </div>\n  )\n};\n\ninterface VProps {\n  read: () => number;\n  write: (n: number) => number;\n  name: string;\n}\n\nconst Value = ({ read, write, name }: VProps) => {\n  const [ num, setNum ] = useState(read());\n  const change = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNum(write(+e.target.value));\n  };\n  const clear = () => {\n    window.localStorage.removeItem(name);\n    setNum(read());\n  };\n\n  return (\n    <Fragment>\n      <input type=\"number\" value={num} onChange={change} size={5} className={styles.value} name={name} />\n      <span onClick={clear} className={styles.clear} title=\"Clear value\">&#x1f5d1;</span>\n    </Fragment>\n  );\n};\nexport default Advanced;","import React, { createContext, useContext, ChangeEventHandler, InputHTMLAttributes, PropsWithChildren } from 'react';\nimport uniqueString from 'unique-string';\n\ninterface RadioProps {\n  className?: string;\n  value?: string;\n  name?: string;\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n}\n\n\nconst RadioContext = createContext({} as Omit<RadioProps, 'className'>);\nexport const RadioGroup = ({ className, children, ...rest }: PropsWithChildren<RadioProps>) => {\n  if (!rest.name)\n    rest.name = uniqueString();\n  return (\n    <RadioContext.Provider value={rest}>\n      <div className={className} role=\"radiogroup\">\n        {children}\n      </div>\n    </RadioContext.Provider>\n  )\n};\n\ntype RadioButtonProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'type' | 'onChange' | 'checked' | 'name'>;\nexport const RadioButton = ({ value, children, ...rest }: RadioButtonProps) => {\n  const { onChange, value: radioValue, name } = useContext(RadioContext);\n\n  return (\n    <input\n      type=\"radio\"\n      value={value}\n      name={name}\n      onChange={onChange}\n      checked={radioValue === value}\n      {...rest}\n    >\n      {children}\n    </input>\n  )\n};","import React, { HTMLProps } from 'react';\nimport { RadioButton } from '../../Radio';\nimport stylesCode from './code.module.scss';\n\ninterface SProps extends HTMLProps<HTMLSpanElement> {\n  value: string;\n}\n\nconst E = ({ value: val, ...args }: SProps) => <span {...args}>&lt;<span className={stylesCode.entry}>{val}</span>&gt;</span>;\nconst N = ({ value: val, ...args }: SProps) => <span {...args}>&lt;<span className={stylesCode.nonterminal}>{val}</span>&gt;</span>;\nconst T = ({ value: val, ...args }: SProps) => <span {...args}>\"<span className={stylesCode.terminal}>{val}</span>\"</span>;\n\nconst BNF = () => {\n  return (\n    <div>\n      <label data-tip=\"Backus-Naur form\"><RadioButton value=\"bnf\" className={stylesCode.box} /><span>BNF</span></label>\n      <code className={stylesCode.code}>\n        <E value='start' /> ::= <N value='int' /> <T value='B' /> | <T value='a' /> | <T value=\"\" data-tip=\"At least one symbol is required\" /><br />\n        <N value='int' /> ::= <T value='1' /><br />\n        <N value='int' /> ::= <T value='2' />\n      </code>\n    </div>\n  )\n};\nexport default BNF;","import React, { HTMLProps } from 'react';\nimport { RadioButton } from '../../Radio';\nimport stylesCode from './code.module.scss';\n\ninterface SProps extends HTMLProps<HTMLSpanElement> {\n  value: string;\n}\n\nconst E = ({ value: val, ...args }: SProps) => <span className={stylesCode.entry} {...args}>{val}</span>;\nconst N = ({ value: val, ...args }: SProps) => <span className={stylesCode.nonterminal} {...args}>{val}</span>;\nconst T = ({ value: val, ...args }: SProps) => <span className={stylesCode.terminal} {...args}>{val}</span>;\n\nconst FCS = () => {\n  return (\n    <div>\n      <label><RadioButton value=\"fcs\" className={stylesCode.box} /><span>FCS</span></label>\n      <code className={stylesCode.code}>\n        <E value='S' /> -&gt; <N value='T' /><T value='B' data-tip=\"Unresolved non-terminals get converted to terminals\" /> | <T value='a' /> | <T value=\"&nbsp;\" data-tip=\"Empty branches work implicitly\" /><br />\n        <N value='T' /> → <T value='1' /><br />\n        <N value='T' /> → <T value='2' />\n      </code>\n    </div>\n  )\n};\nexport default FCS;","import React from 'react';\nimport Syntax from '../../Logic/providers/syntaxes';\nimport { RadioGroup } from '../../Radio';\nimport BNF from './BNF';\nimport FCS from './FCS';\nimport stylesCode from './code.module.scss';\n\ninterface Props {\n  className?: string;\n}\nconst SyntaxSwitcher = ({ className }: Props) => {\n  const { syntax, setSyntax } = Syntax.useContainer();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSyntax(e.target.value);\n  };\n  \n  return (\n    <div className={`${className || ''}`}>\n      <h3>Select syntax</h3>\n\n      <RadioGroup onChange={onChange} value={syntax}>\n        <FCS />\n        <BNF />\n      </RadioGroup>\n\n      <p>Both syntaxes above produce the same grammar, with different names and conventions for <span className={stylesCode.entry} data-tip=\"The entry symbol into the grammar\">Start</span>-, <span className={stylesCode.nonterminal}>non-terminal</span> and <span className={stylesCode.terminal}>terminal</span> symbols.</p>\n      <p>BNF is stricter and does not allow empty branches or implicit symbol declarations.</p>\n    </div>\n  )\n};\nexport default SyntaxSwitcher;","import React, { useState } from 'react';\nimport Advanced from './Advanced';\nimport stylesH from './Header.module.scss';\nimport styles from './Modal.module.scss';\nimport SyntaxSwitcher from './Syntax/Switcher';\n\ninterface Props {\n  className?: string;\n  close: () => void;\n}\n\nconst Modal = ({ className, close }: Props) => {\n  const [ advancedOpen, setAdvancedOpen ] = useState(false);\n\n  return (\n    <div className={`${className || ''}`}>\n      <div className={`${stylesH.cols} App-header`}>\n        <h2 className={stylesH.title}>\n          Settings\n        </h2>\n        <div className={`${stylesH.close} ${styles.close}`} onClick={close} data-testid=\"close\">\n          &times;\n        </div>\n      </div>\n\n      <SyntaxSwitcher className={styles.content} />\n      <Advanced className={styles.content} open={advancedOpen} setOpen={setAdvancedOpen} />\n    </div>\n  )\n};\nexport default Modal;","import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport ReactTooltip from 'react-tooltip';\nimport styles from './Header.module.scss';\nimport Modal from './Modal';\nimport { ReactComponent as Cog } from './settings.svg';\n\n\ninterface Props {\n  className?: string;\n}\n\nconst Header = ({ className }: Props) => {\n  const [ isOpen, setOpen ] = useState(false);\n\n  const close = () => setOpen(false);\n\n  return (\n    <header\n      className={`${className || ''} ${styles.cols} App-header`}\n      data-testid=\"header\"\n    >\n      <h1 className={styles.title}>\n        <abbr title=\"Context-free grammar\">CFG</abbr> Testing suite\n      </h1>\n      <div className={styles.settings}>\n        <Cog onClick={() => setOpen(true)} data-testid=\"cog\" />\n      </div>\n\n      <ReactModal\n        isOpen={isOpen}\n        onRequestClose={close}\n        onAfterOpen={() => ReactTooltip.rebuild()}\n        testId=\"modal\"\n      >\n        <Modal close={close} />\n      </ReactModal>\n    </header>\n  );\n};\nexport default Header;","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport './App.scss';\nimport Body from './Body/Body';\nimport Footer from './Footer/Footer';\nimport Header from './Header/Header';\nimport Syntax from './Logic/providers/syntaxes';\n\n\nconst App = () => {\n\n  return (\n    <Syntax.Provider>\n      <div className=\"App\" data-testid=\"app\">\n        <Header />\n        <Body />\n        <Footer />\n        <ReactTooltip effect=\"solid\" />\n      </div>\n    </Syntax.Provider>\n  );\n};\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport App from './App/App.tsx';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactModal.setAppElement('#root');\nReactModal.defaultStyles.content.inset = '';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"bodyComponent_textarea__2AEVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"area\":\"Textarea_area__13BlF\",\"title\":\"Textarea_title__2JY6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Body_grid__2Eze4\",\"left\":\"Body_left__3afN_\",\"rightTop\":\"Body_rightTop__x95CP\",\"rightBottom\":\"Body_rightBottom__2q8gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"close\":\"Modal_close__2S9P9\",\"content\":\"Modal_content__bvzj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"strings\":\"GrammarOutput_strings__syveZ\",\"empty\":\"GrammarOutput_empty__3tYL_\"};"],"sourceRoot":""}